# for deploy

deploy_ip: '10.0.35.21'
cluster_domain: sinnet.com.cn
deploy_host: 'deploy.{{cluster_domain}}'
docker_registry: "{{deploy_host}}"

deploy_container_engine: false

kube_image_repo: "{{ deploy_host }}/google-containers"

external_ntp_servers:
  - 0.pool.ntp.org
  - 1.pool.ntp.org
  - 2.pool.ntp.org
  - 3.pool.ntp.org

name_servers:
  - 114.114.114.114

reset_network_force: true

## Change this to use another Kubernetes version, e.g. a current beta release
kube_version: v1.14.3
kubeadm_version: "{{ kube_version }}"
etcd_version: v3.2.26

kube_network_plugin: calico
# Kubernetes internal network for services, unused block of space.
kube_service_addresses: 10.233.0.0/18

# internal network. When used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
kube_pods_subnet: 10.233.64.0/18

# internal network node size allocation (optional). This is the size allocated
# to each node on your network.  With these defaults you should have
# room for 4096 nodes with 254 pods per node.
kube_network_node_prefix: 24

# Can be ipvs, iptables
kube_proxy_mode: iptables

# DNS configuration.
# Kubernetes cluster name, also will be used as DNS domain
cluster_name: cluster.local
# Can be dnsmasq_kubedns, kubedns, coredns, coredns_dual, manual or none
dns_mode: coredns
# Set manual server if using a custom cluster DNS server
#manual_dns_server: 10.x.x.x
#
download_run_once: false

external_nameservers:
  - "114.114.114.114"

# Helm deployment
helm_enabled: true
helm_stable_repo_url: "http://{{ deploy_host }}/repository/helm/"
helm_version: "v2.13.1"

kubelet_authentication_token_webhook: true

germ_path: '/opt/dire/germ'


work_space: '/opt/dire'
steam_path: '{{work_space}}/steam'
kubespray_path: '{{work_space}}/kubespray'

## Settings for containerized control plane (etcd/kubelet/secrets)
etcd_deployment_type: docker
kubelet_deployment_type: host
helm_deployment_type: host

# Arch of Docker images and needed packages
image_arch: 'amd64'
calico_ctl_version: "v3.4.4"
cni_version: "v0.6.0"

coredns_image_repo: "{{ docker_registry }}/coredns/coredns"
nodelocaldns_image_repo: "{{ docker_registry }}/k8s/k8s-dns-node-cache"
etcd_image_repo: "{{ docker_registry }}/coreos/etcd"
dashboard_image_repo: "{{ docker_registry }}/google_containers/kubernetes-dashboard-{{ image_arch }}"
calico_node_image_repo: "{{ docker_registry }}/calico/node"
calico_cni_image_repo: "{{ docker_registry }}/calico/cni"
calico_policy_image_repo: "{{ docker_registry }}/calico/kube-controllers"
pod_infra_image_repo: "{{ docker_registry }}/google_containers/pause-{{ image_arch }}"
nginx_image_repo: "{{ docker_registry }}/hub/nginx"
dnsautoscaler_image_repo: "{{ docker_registry }}/k8s/cluster-proportional-autoscaler-{{ image_arch }}"
helm_image_repo: "{{ docker_registry }}/k8s/k8s-helm"
tiller_image_repo: "{{ docker_registry }}/k8s/tiller"

kubeadm_download_url: "http://{{ docker_registry }}/repository/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/{{ image_arch }}/kubeadm"
hyperkube_download_url: "http://{{ docker_registry }}/repository/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/hyperkube"
calicoctl_download_url: "http://{{ docker_registry }}/repository/kubernetes-release/calicoctl/releases/download/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}"
cni_download_url: "http://{{ docker_registry }}/repository/kubernetes-release/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-{{ image_arch }}-{{ cni_version }}.tgz"
